package com.questionnaire.ssm.module.generated.pojo;

import java.util.ArrayList;
import java.util.List;

public class QuestionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table question
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public QuestionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andQuestionIdIsNull() {
            addCriterion("question_id is null");
            return (Criteria) this;
        }

        public Criteria andQuestionIdIsNotNull() {
            addCriterion("question_id is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionIdEqualTo(Long value) {
            addCriterion("question_id =", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotEqualTo(Long value) {
            addCriterion("question_id <>", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdGreaterThan(Long value) {
            addCriterion("question_id >", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdGreaterThanOrEqualTo(Long value) {
            addCriterion("question_id >=", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdLessThan(Long value) {
            addCriterion("question_id <", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdLessThanOrEqualTo(Long value) {
            addCriterion("question_id <=", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdIn(List<Long> values) {
            addCriterion("question_id in", values, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotIn(List<Long> values) {
            addCriterion("question_id not in", values, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdBetween(Long value1, Long value2) {
            addCriterion("question_id between", value1, value2, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotBetween(Long value1, Long value2) {
            addCriterion("question_id not between", value1, value2, "questionId");
            return (Criteria) this;
        }

        public Criteria andOptionFollowIsNull() {
            addCriterion("option_follow is null");
            return (Criteria) this;
        }

        public Criteria andOptionFollowIsNotNull() {
            addCriterion("option_follow is not null");
            return (Criteria) this;
        }

        public Criteria andOptionFollowEqualTo(String value) {
            addCriterion("option_follow =", value, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowNotEqualTo(String value) {
            addCriterion("option_follow <>", value, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowGreaterThan(String value) {
            addCriterion("option_follow >", value, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowGreaterThanOrEqualTo(String value) {
            addCriterion("option_follow >=", value, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowLessThan(String value) {
            addCriterion("option_follow <", value, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowLessThanOrEqualTo(String value) {
            addCriterion("option_follow <=", value, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowLike(String value) {
            addCriterion("option_follow like", value, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowNotLike(String value) {
            addCriterion("option_follow not like", value, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowIn(List<String> values) {
            addCriterion("option_follow in", values, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowNotIn(List<String> values) {
            addCriterion("option_follow not in", values, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowBetween(String value1, String value2) {
            addCriterion("option_follow between", value1, value2, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andOptionFollowNotBetween(String value1, String value2) {
            addCriterion("option_follow not between", value1, value2, "optionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIsNull() {
            addCriterion("question_type is null");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIsNotNull() {
            addCriterion("question_type is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeEqualTo(String value) {
            addCriterion("question_type =", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotEqualTo(String value) {
            addCriterion("question_type <>", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeGreaterThan(String value) {
            addCriterion("question_type >", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeGreaterThanOrEqualTo(String value) {
            addCriterion("question_type >=", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeLessThan(String value) {
            addCriterion("question_type <", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeLessThanOrEqualTo(String value) {
            addCriterion("question_type <=", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeLike(String value) {
            addCriterion("question_type like", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotLike(String value) {
            addCriterion("question_type not like", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIn(List<String> values) {
            addCriterion("question_type in", values, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotIn(List<String> values) {
            addCriterion("question_type not in", values, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeBetween(String value1, String value2) {
            addCriterion("question_type between", value1, value2, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotBetween(String value1, String value2) {
            addCriterion("question_type not between", value1, value2, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionIsNull() {
            addCriterion("question_description is null");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionIsNotNull() {
            addCriterion("question_description is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionEqualTo(String value) {
            addCriterion("question_description =", value, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionNotEqualTo(String value) {
            addCriterion("question_description <>", value, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionGreaterThan(String value) {
            addCriterion("question_description >", value, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("question_description >=", value, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionLessThan(String value) {
            addCriterion("question_description <", value, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionLessThanOrEqualTo(String value) {
            addCriterion("question_description <=", value, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionLike(String value) {
            addCriterion("question_description like", value, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionNotLike(String value) {
            addCriterion("question_description not like", value, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionIn(List<String> values) {
            addCriterion("question_description in", values, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionNotIn(List<String> values) {
            addCriterion("question_description not in", values, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionBetween(String value1, String value2) {
            addCriterion("question_description between", value1, value2, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionDescriptionNotBetween(String value1, String value2) {
            addCriterion("question_description not between", value1, value2, "questionDescription");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowIsNull() {
            addCriterion("question_follow is null");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowIsNotNull() {
            addCriterion("question_follow is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowEqualTo(Integer value) {
            addCriterion("question_follow =", value, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowNotEqualTo(Integer value) {
            addCriterion("question_follow <>", value, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowGreaterThan(Integer value) {
            addCriterion("question_follow >", value, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowGreaterThanOrEqualTo(Integer value) {
            addCriterion("question_follow >=", value, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowLessThan(Integer value) {
            addCriterion("question_follow <", value, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowLessThanOrEqualTo(Integer value) {
            addCriterion("question_follow <=", value, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowIn(List<Integer> values) {
            addCriterion("question_follow in", values, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowNotIn(List<Integer> values) {
            addCriterion("question_follow not in", values, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowBetween(Integer value1, Integer value2) {
            addCriterion("question_follow between", value1, value2, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andQuestionFollowNotBetween(Integer value1, Integer value2) {
            addCriterion("question_follow not between", value1, value2, "questionFollow");
            return (Criteria) this;
        }

        public Criteria andIsMustIsNull() {
            addCriterion("is_must is null");
            return (Criteria) this;
        }

        public Criteria andIsMustIsNotNull() {
            addCriterion("is_must is not null");
            return (Criteria) this;
        }

        public Criteria andIsMustEqualTo(Boolean value) {
            addCriterion("is_must =", value, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustNotEqualTo(Boolean value) {
            addCriterion("is_must <>", value, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustGreaterThan(Boolean value) {
            addCriterion("is_must >", value, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_must >=", value, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustLessThan(Boolean value) {
            addCriterion("is_must <", value, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustLessThanOrEqualTo(Boolean value) {
            addCriterion("is_must <=", value, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustIn(List<Boolean> values) {
            addCriterion("is_must in", values, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustNotIn(List<Boolean> values) {
            addCriterion("is_must not in", values, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustBetween(Boolean value1, Boolean value2) {
            addCriterion("is_must between", value1, value2, "isMust");
            return (Criteria) this;
        }

        public Criteria andIsMustNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_must not between", value1, value2, "isMust");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table question
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}